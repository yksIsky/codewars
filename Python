def spin_words(sentence):
    sentence = sentence.split()
    y = 0
    z = []
    for w in sentence:
        print(w)
        if len(w) >= 5 :
            z.append(w[::-1])
        else:
            z.append(w)
        y += 1
    return " ".join([ i for i in z ])
######################################
def get_count(sentence):
return len([ char for char in sentence if char in "aeiou" ])
###############################################################3
def pig_it(text):
    x = text.split()
    print(x)
    spec = "!?.,/\:;"
    z=[]
    p = 0
    for i in x:

        if i in spec:
            z.append(i[0])
        elif p == len(x)-1:
            z.append(i[1::] + i[0] + "ay")
        else:
            z.append(i[1::] + i[0] + "ay ")
        p +=1
    return "".join([ z[i] for i in range(len(z)) ])
#######################################################################
def bin_to_decimal(binary):
    binary1 = int(binary)
    decimal, i, n = 0, 0, 0
    while(binary != 0):
        dec = int(binary) % 10
        decimal = decimal + dec * pow(2, i)
        binary = int(binary) // 10
        i += 1
    return decimal
#######################################################################3
def split(word):
    return [char for char in word ]
#########################################
def split_time(time,space,moment)
    x = split(moment)
    time = 0
    space = 0
    for i in x:
        if i.isnumeric():
            time += int(i)
    for i in x:
        if not i.isnumeric() or int(i) ==0:
                space += 1
    if time > space:
        return [False , False, True]
    elif time < space:
        return [True, False, False]
    elif space == time:
        return [False, True, False]

######################################################
def same_case(a, b):
    if not a.isalpha() or not b.isalpha():
        return -1
    else:
        if a.isupper() and b.isupper() or a.islower() and b.islower():
            return 1
        elif not a.isupper() and b.isupper() or not a.islower() and b.islower():
            return 0
######################################################

def find_it(seq):
    x = []
    for i in seq:
        if seq.count(i) % 2 !=0:
            x.append([str(seq.count(i)),str(i)])
    y = sorted(x)    
    z = y[0]
    return int(z[1])

######################################################
def lowest_product(input):
    lis = []
    z = input
    x = 0
    if len(z) < 4:
        return "Number is too small"
    else:    
        for i in z:
            try:
                lis.append(int(z[x])*int(z[x+1])*int(z[x+2])*int(z[x+3]))
                x += 1
            except:pass
            
    lis.sort()

######################################################
def lowest_product(input):
    lis = []
    z = input
    x = 0
    if len(z) < 4:
        return "Number is too small"
    else:
        for i in z:
            try:
                lis.append(int(z[x]) * int(z[x + 1]) * int(z[x + 2]) * int(z[x + 3]))
                x += 1
            except:
                pass

    lis.sort()  
